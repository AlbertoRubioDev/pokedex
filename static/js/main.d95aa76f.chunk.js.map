{"version":3,"sources":["hooks/use-intersection-observer.js","components/image/image.js","components/imageContainer/imageContainer.js","utils/index.js","components/pokemonList/pokemonCard/index.js","components/pokemonList/pokemonCard/pokemonCard.js","components/loding/loading.js","components/pokemonList/index.js","components/pokemonList/pokemonList.js","components/selectedPokemon/pokemonBaseStats/index.js","components/selectedPokemon/pokemonBaseStats/pokemonBaseStats.js","components/pokemonEvolutionTree/pokemonChain/pokemonChain.js","components/pokemonEvolutionTree/pokemonEvolutionTree.js","components/selectedPokemon/selectedPokemon.js","components/selectedPokemon/index.js","components/topbar/topbar.js","components/home/home.js","App.js","reportWebVitals.js","index.js"],"names":["useIntersectionObserver","target","onIntersect","threshold","rootMargin","React","useEffect","observer","IntersectionObserver","current","observe","unobserve","Image","props","useState","isLoaded","setIsLoaded","Fragment","className","alt","src","thumb","style","visibility","onLoad","opacity","ImageContainer","ref","useRef","isVisible","setIsVisible","observerElement","isIntersecting","aspectRatio","height","width","paddingBottom","numberText","number","txt","toString","length","PokemonCard","name","to","margin","backgroundColor","display","borderRadius","padding","Loading","position","top","left","transform","size","PokemonList","pokemonList","setPokemonList","loading","setLoading","nextPage","setNextPage","prevPage","setPrevPage","getList","useCallback","newUrl","a","url","window","scrollTo","fetch","response","json","responseList","results","next","previous","console","log","paddingTop","color","map","pokemon","span","split","onClick","PokemonBaseStats","stats","statNames","stat","i","textAlign","aria-hidden","base_stat","percent","unfilled","appearTransition","PokemonChain","chain","depth","evolves_to","item","paddingLeft","species","PokemonEvolutionTree","setChain","getTree","responseTree","evolution_chain","response2","responseTree2","Paragraph","Typography","SelectedPokemon","useParams","setPokemon","getPokemon","responsePokemon","types","type","marginBottom","element","text","marginLeft","textTransform","tabs","title","sub","initialPage","onChange","tab","index","onTabClick","alignItems","justifyContent","Topbar","history","useHistory","location","useLocation","content","push","pathname","includes","marginTop","icon","onLeftClick","goBack","rightContent","placement","trigger","routes","path","Component","App","exact","match","CSSTransition","in","timeout","classNames","unmountOnExit","ScrollToTop","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d95aa76f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\nconst useIntersectionObserver = ({\r\n  target,\r\n  onIntersect,\r\n  threshold = 0.1,\r\n  rootMargin = \"0px\"\r\n}) => {\r\n  React.useEffect(() => {\r\n    const observer = new IntersectionObserver(onIntersect, {\r\n      rootMargin,\r\n      threshold\r\n    });\r\n    const current = target.current;observer.observe(current);\r\n    return () => {\r\n      observer.unobserve(current);\r\n    };\r\n  });\r\n};\r\n\r\nexport default useIntersectionObserver;","import React from \"react\";\r\n\r\nconst Image = props => {\r\n  const [isLoaded, setIsLoaded] = React.useState(false);\r\n  return (\r\n    <React.Fragment>\r\n      <img\r\n        className=\"image thumb\"\r\n        alt={props.alt}\r\n        src={props.thumb}\r\n        style={{ visibility: isLoaded ? \"hidden\" : \"visible\" }}\r\n      />\r\n      <img\r\n        onLoad={() => {\r\n          setIsLoaded(true);\r\n        }}\r\n        className=\"image full\"\r\n        style={{ opacity: isLoaded ? 1 : 0 }}\r\n        alt={props.alt}\r\n        src={props.src}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};export default Image;","import React from \"react\";\r\nimport useIntersectionObserver from '../../hooks/use-intersection-observer';\r\nimport Image from '../image/image'\r\n\r\nconst ImageContainer = props => {\r\n  const ref = React.useRef();\r\n  const [isVisible, setIsVisible] = React.useState(false);\r\n  \r\n  useIntersectionObserver({\r\n      target: ref,\r\n      onIntersect: ([{ isIntersecting }], observerElement) => {\r\n          if (isIntersecting) {\r\n              setIsVisible(true);\r\n              observerElement.unobserve(ref.current);\r\n            }\r\n        }\r\n    });\r\n\r\n    const aspectRatio = (props.height / props.width) * 100;\r\n  \r\n  return (\r\n      <div\r\n      ref={ref}\r\n      className=\"image-container\"\r\n      style={{ paddingBottom: `${aspectRatio}%` }}\r\n    >\r\n      {isVisible && (\r\n        <Image src={props.src} thumb={props.thumb} alt={props.alt} />\r\n       )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageContainer;","export const numberText = (number) => {\r\n    if(number){\r\n      let txt = number.toString();\r\n      while(txt.length < 3){\r\n        txt = '0'+txt;\r\n      }\r\n      return txt;\r\n    }\r\n    return null;\r\n  }","import PokemonCard from \"./pokemonCard\";\r\nexport default PokemonCard;","import React from \"react\";\r\nimport { Link} from \"react-router-dom\";\r\nimport ImageContainer from '../../imageContainer/imageContainer';\r\nimport {numberText} from \"../../../utils\"\r\n\r\n\r\nconst PokemonCard = ({name,number}) => {\r\n\r\nreturn (\r\n    <Link to={`/pokemon/${number}`}>\r\n        <div\r\n            style={{margin: '1rem', backgroundColor: 'white', display: 'flex', borderRadius: '2.5rem', padding: '1rem'}}\r\n         >\r\n             <div className='pkm-txt'>\r\n        <div>{name}</div>\r\n        <div>#{numberText(number)}</div>\r\n        </div>\r\n        <div style={{width: '40%', margin:'auto' }}>\r\n        <ImageContainer\r\n                src={`https://www.cpokemon.com/pokes/home/${number}.png`}\r\n                thumb={`https://www.cpokemon.com/pokes/home/${number}.png`}\r\n                height={300}\r\n                width={300}\r\n                alt={name}\r\n              />\r\n       </div>\r\n    </div>\r\n  </Link>\r\n  );\r\n}\r\n\r\nexport default PokemonCard;\r\n","import React from \"react\";\r\nimport { Spin } from 'antd';\r\n\r\nconst Loading = () => {\r\n    return (\r\n    <div style={{position:'fixed', top: '50%', left: '50%', transform: 'transform: translate(-50%, -50%)'}}>\r\n    <Spin size=\"large\" />\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Loading;","import PokemonList from \"./pokemonList\";\r\nexport default PokemonList;","import React, {useEffect, useState, useCallback} from \"react\";\r\nimport PokemonCard from \"./pokemonCard\";\r\nimport { Row, Col } from 'antd';\r\nimport Loading from '../loding/loading'\r\n\r\nconst PokemonList = () => {\r\n\r\nconst [pokemonList, setPokemonList] = useState([]);\r\nconst [loading, setLoading] = useState(true);\r\nconst [nextPage, setNextPage] = useState('');\r\nconst [prevPage, setPrevPage] = useState('');\r\n\r\n\r\nconst getList = useCallback(async (newUrl) => {\r\n    let url = `https://pokeapi.co/api/v2/pokemon/?limit=150`;\r\n    if(newUrl){\r\n      url = newUrl;\r\n    }\r\n    try {\r\n      setLoading(true);\r\n      window.scrollTo(0, 0);\r\n      let response = await fetch(url);\r\n      let responseList = await response.json();\r\n      setPokemonList(responseList.results);\r\n      setLoading(false);\r\n      setNextPage(responseList.next)\r\n      setPrevPage(responseList.previous)\r\n    } catch (err) {\r\n      console.log(\"err\", err);\r\n    }\r\n  }, []);\r\n\r\n    useEffect(() => {\r\n        getList();\r\n      }, [getList]);\r\n\r\n\r\n    if(loading) return <Loading />\r\n    return (\r\n      <div style={{paddingTop: \"10rem\"}}>\r\n      <p className='pokemonTitle' style={{color: '#000'}}>\r\n      Pokedex\r\n    </p>\r\n      <Row>\r\n\r\n    {\r\n      \r\n      pokemonList.map((pokemon) => \r\n        <Col span={12} >\r\n                <PokemonCard key={pokemon.name} number={pokemon.url.split(\"/\")[6]} url={pokemon.url} name={pokemon.name}/>\r\n           </Col>\r\n           )\r\n    }\r\n  \r\n    </Row>\r\n    {\r\n      prevPage ? <button onClick={() => getList(prevPage)}>back</button> : 'ño'\r\n    }\r\n      {\r\n    nextPage ? <button onClick={() => getList(nextPage)}>next</button> : 'ño'\r\n    }\r\n</div>\r\n  );\r\n}\r\n\r\nexport default PokemonList;\r\n","import PokemonBaseStats from \"./pokemonBaseStats\";\r\nexport default PokemonBaseStats;","import React from \"react\";\r\nimport { Progress, WhiteSpace} from 'antd-mobile';\r\nimport { Row, Col } from 'antd';\r\n\r\n\r\nconst PokemonBaseStats = ({stats}) => {\r\n\r\n        const statNames= [\"HP\",\"Attack\",\"Defense\",\"Sp. Atk\", \"Sp. Def\", \"Speed\" ];\r\n\r\n            return (\r\n                <>{\r\n                    stats.map((stat,i) => \r\n                        <Row>\r\n                              <Col span={4} style={{margin: 'auto', textAlign: 'left'}}>\r\n                                {statNames[i]}\r\n                              </Col>\r\n                              <Col span={4} style={{margin: 'auto'}}>\r\n                                    <div aria-hidden=\"true\">{stat.base_stat}</div>\r\n                                </Col>  \r\n                            <Col span={16}>\r\n                        <div key={stat.base_stat}>\r\n                            <div className=\"show-info\">\r\n                                <div className=\"progress\">\r\n                                    <Progress percent={stat.base_stat*(100/255)} position=\"normal\" unfilled={false} appearTransition />\r\n                                </div>\r\n                            </div>\r\n                            <WhiteSpace size=\"xl\" />\r\n                        </div>\r\n                        </Col>\r\n\r\n                        </Row>\r\n                    )           \r\n                }\r\n                </>\r\n            );\r\n\r\n}\r\n\r\nexport default PokemonBaseStats;\r\n","import React from \"react\";\r\nimport PokemonCard from \"../../pokemonList/pokemonCard\"\r\n\r\nconst PokemonChain = ({chain, depth = 0}) => {\r\n    //debugger;\r\n\r\n    if (!chain.evolves_to || !chain.evolves_to.length) {\r\n      console.log(chain);\r\n        if(chain.species)\r\n        return <div  style={{ paddingLeft: depth * 20 }} >            \r\n        <PokemonCard key={chain.species.name} number={chain.species.url.split(\"/\")[6]} url={chain.species.url} name={chain.species.name}/>\r\n        </div>\r\n        return null;\r\n      }\r\n    \r\n      return (\r\n          <>\r\n          {\r\n        chain.evolves_to.map(item => (\r\n            <React.Fragment key={chain.species.name}>\r\n           <div  style={{ paddingLeft: depth * 20 }} >            \r\n              <PokemonCard key={chain.species.name} number={chain.species.url.split(\"/\")[6]} url={chain.species.url} name={chain.species.name}/>\r\n            </div>\r\n          <PokemonChain chain={item} depth={depth + 1}/>\r\n        </React.Fragment>\r\n      ))\r\n        }\r\n      </>\r\n      )\r\n\r\n}\r\n\r\nexport default PokemonChain;\r\n","import React, {useEffect, useState, useCallback} from \"react\";\r\nimport Loading from \"../loding/loading\";\r\nimport PokemonChain from \"./pokemonChain/pokemonChain\";\r\n\r\n\r\nconst PokemonEvolutionTree = ({url}) => {\r\n\r\nconst [chain, setChain] = useState();\r\nconst [loading, setLoading] = useState(true);\r\n\r\n\r\nconst getTree = useCallback(async () => {\r\n    try {\r\n    //debugger;\r\n      let response = await fetch(url);\r\n      let responseTree = await response.json();\r\n      let response2 = await fetch(responseTree.evolution_chain.url);\r\n      let responseTree2 = await response2.json();\r\n      setChain(responseTree2);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      console.log(\"err\", err);\r\n    }\r\n  }, [url]);\r\n\r\n    useEffect(() => {\r\n        getTree();\r\n      }, [getTree]);\r\n\r\n\r\n\r\n    if(loading) return <Loading/>\r\n    \r\n    return (\r\n        <PokemonChain chain={chain.chain}/>\r\n            );\r\n          \r\n\r\n}\r\n\r\nexport default PokemonEvolutionTree;\r\n","import React, {useEffect, useState, useCallback} from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { Tabs, Badge } from 'antd-mobile';\r\nimport { Image, Typography } from 'antd';\r\nimport PokemonBaseStats from \"./pokemonBaseStats\"\r\nimport {numberText} from \"../../utils\";\r\nimport Loading from \"../loding/loading\"\r\nimport PokemonEvolutionTree from \"../pokemonEvolutionTree/pokemonEvolutionTree\"\r\n\r\n\r\nconst { Paragraph } = Typography;\r\n\r\n\r\nconst SelectedPokemon = () => {\r\n\r\n\r\n let { number } = useParams();\r\nconst [pokemon, setPokemon] = useState([]);\r\nconst [loading, setLoading] = useState(true);\r\n\r\nconst tabs = [\r\n  { title: 'About', sub: '1' },\r\n  { title: 'Base Stats', sub: '2' },\r\n  { title: 'Evolution', sub: '3' },\r\n  { title: 'Moves', sub: '4' },\r\n];\r\n\r\nconst getPokemon = useCallback(async () => {\r\n    try {\r\n      let response = await fetch(`https://pokeapi.co/api/v2/pokemon/${number}`);\r\n      let responsePokemon = await response.json();\r\n      setPokemon(responsePokemon);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      console.log(\"err\", err);\r\n    }\r\n  }, [number]);\r\n\r\n    useEffect(() => {\r\n        getPokemon();\r\n      }, [getPokemon]);\r\n\r\n\r\n    if(loading) return <Loading/>\r\n    \r\n    return (\r\n      <div className={pokemon.types[0].type.name} style={{paddingTop:'9rem'}}>\r\n        <p className='pokemonTitle'>\r\n          {pokemon.name}\r\n        </p>\r\n        <p className='pokemonSubtitle'>\r\n          #{numberText(number)}\r\n        </p>\r\n        <Paragraph style={{textAlign: 'left', paddingLeft: '1rem', marginBottom: '0'}}>\r\n        {\r\n          pokemon.types.map(element => <Badge text={element.type.name} style={{ marginLeft: 12, backgroundColor: 'rgba(255,255,255,0.35)', textTransform: 'capitalize',\r\n          padding: '0 1rem'}}  />)\r\n        }\r\n        </Paragraph>\r\n      <Image\r\n      className=\"pkmn-background\"\r\n      width={300}\r\n      src={`https://www.cpokemon.com/pokes/home/${number}.png`}\r\n    />\r\n        <Tabs tabs={tabs}\r\n          initialPage={1}\r\n          onChange={(tab, index) => { console.log('onChange', index, tab); }}\r\n          onTabClick={(tab, index) => { console.log('onTabClick', index, tab); }}\r\n        >\r\n          <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', height: '150px', backgroundColor: '#fff' }}>\r\n            \r\n          </div>\r\n          <div style={{alignItems: 'center', justifyContent: 'center', backgroundColor: '#fff', padding:'2rem' }}>\r\n            <PokemonBaseStats stats={pokemon.stats}/>\r\n          </div>\r\n          <div style={{alignItems: 'center', justifyContent: 'center', backgroundColor: '#eee' }}>\r\n            <PokemonEvolutionTree url={pokemon.species.url}/>\r\n          </div>\r\n          <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', height: '150px', backgroundColor: '#fff' }}>\r\n            Content of fouth tab\r\n          </div>\r\n        </Tabs>\r\n      </div>\r\n    );\r\n          \r\n\r\n}\r\n\r\nexport default SelectedPokemon;\r\n","import SelectedPokemon from \"./selectedPokemon\";\r\nexport default SelectedPokemon;","import React from \"react\";\r\nimport {\r\n  Link,\r\n  useHistory,\r\n  useLocation\r\n} from \"react-router-dom\";\r\nimport { NavBar, Icon } from 'antd-mobile';\r\nimport { Popover } from 'antd';\r\n\r\n\r\n\r\nexport default function Topbar() {\r\n  \r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n\r\n  const goToPreviousPath = () => {\r\n      history.goBack()\r\n  }\r\n\r\n  const content = (\r\n    <div>\r\n      <p><Link onClick={() => history.push('/')}>Home</Link></p>\r\n      <p> <Link onClick={() => history.push('/list')}>Pokedex</Link></p>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n        <NavBar\r\n      className={ location.pathname.includes('pokemon') ? 'white-text' : 'black-text' }\r\n      style={{position: 'absolute', width: '100%', backgroundColor: 'unset', marginTop: '4.5rem'}}\r\n      icon={<Icon type=\"left\" />}\r\n      onLeftClick={goToPreviousPath}\r\n      rightContent={[\r\n        <Popover placement=\"bottomRight\" content={content} trigger=\"click\">\r\n            <Icon key=\"1\" type=\"ellipsis\" />\r\n            {\r\n              location.pathname.includes('pokemon') ? null : <img src=\"/static/media/ball.4ffa1b14.png\" alt='nav' className='nav-img'/>\r\n            }\r\n        </Popover>\r\n      ]}\r\n    >\r\n    </NavBar>\r\n  );\r\n}","import React, {useEffect} from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  useLocation\r\n} from \"react-router-dom\";\r\nimport PokemonList from \"../pokemonList\";\r\nimport SelectedPokemon from \"../selectedPokemon\";\r\nimport Topbar from '../topbar/topbar'\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\n\r\nconst Home = () => {\r\n  return <h1>NO QUIERO HACER EL HOME</h1>\r\n}\r\n\r\n\r\nconst routes = [\r\n  { path: '/', name: 'Home', Component: Home },\r\n  { path: '/list', name: 'About', Component: PokemonList },\r\n  { path: '/pokemon/:number', name: 'Contact', Component: SelectedPokemon },\r\n]\r\n\r\n\r\nexport default function App() {\r\n\r\n  return (\r\n    <Router>\r\n      <ScrollToTop />\r\n    <Topbar/>\r\n    {routes.map(({ path, Component }) => (\r\n            <Route key={path} exact path={path}>\r\n              {({ match }) => (\r\n                <CSSTransition\r\n                  in={match != null}\r\n                  timeout={300}\r\n                  classNames=\"page\"\r\n                  unmountOnExit\r\n                >\r\n                  <div className=\"page\">\r\n                    <Component />\r\n                  </div>\r\n                </CSSTransition>\r\n              )}\r\n            </Route>\r\n          ))}\r\n    </Router>\r\n  );\r\n}\r\n\r\n\r\nconst ScrollToTop  = () => {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}\r\n","import './App.css';\nimport Home from \"./components/home/home.js\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}